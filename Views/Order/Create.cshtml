
@model OrderVM

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Order Master</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Create" id="myForm" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="OrderMaster.CustomerName" class="control-label"></label>
                <input asp-for="OrderMaster.CustomerName" class="form-control" />
                <span asp-validation-for="OrderMaster.CustomerName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderMaster.OrderDate" class="control-label"></label>
                <input asp-for="OrderMaster.OrderDate" type="date" class="form-control" />
                <span asp-validation-for="OrderMaster.OrderDate" class="text-danger"></span>
            </div>

            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="OrderMaster.Terms" /> @Html.DisplayNameFor(model => model.OrderMaster.Terms)
                </label>
            </div>

            <div class="form-group">
                <label asp-for="imagefile" class="control-label"></label>
                <input asp-for="imagefile" type="file" class="form-control" onchange="document.getElementById('imagePreview').src= window.URL.createObjectURL(this.files[0])"/>
                 <span asp-validation-for="imagefile" class="text-danger"></span>
                <img id="imagePreview" src="~/images/noimage.jpg" alt="Image Preview" class="rounded-circle" width="125" height="125" />
            </div>


            <h4>Order Details</h4>

            <table class="table" id="myTable">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Price</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.OrderMaster.OrderDetails.Count; i++)
                    {
                                <tr>
                                    <td>
                                @Html.DropDownListFor(model => model.OrderMaster.OrderDetails[i].ProductId, (SelectList)ViewBag.ProductList, "Select a product", new { @class = "form-control" })
                                    <span asp-validation-for="OrderMaster.OrderDetails[i].ProductId" class="text-danger"></span>
                                </td>
                                    <td>
                                    <input asp-for="OrderMaster.OrderDetails[i].Quantity" class="form-control" />
                                    <span asp-validation-for="OrderMaster.OrderDetails[i].Quantity" class="text-danger"></span>
                                    </td>
                                    <td>
                                    <input asp-for="OrderMaster.OrderDetails[i].Price" class="form-control" />
                                    <span asp-validation-for="OrderMaster.OrderDetails[i].Price" class="text-danger"></span>
                                    </td>
                                    <td>
                                @if (i > 0)
                                {
                                            <button type="button" class="btn btn-danger removeItemBtn" onclick="RemoveItem(this)">Remove</button>
                                }
                                    </td>

                                </tr>
                    }
                </tbody>
            </table>

            <input type="hidden" id="hdnLastIndex" value="@(Model.OrderMaster.OrderDetails.Count - 1)" />

            <div class="form-group">
                <button type="button" id="addItemBtn" class="btn btn-primary" onclick="AddItem()">Add Detail</button>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
        <script>
            $(document).ready(function () {
                // Reset the form
                $('#myForm').trigger('reset');

                // Add new item
                $('#addItemBtn').on('click', function () {
                    var lastRowIndex = parseInt($('#hdnLastIndex').val());
                    var nextRowIndex = lastRowIndex + 1;

                    var newRow = @await Html.PartialAsync("_partial");

                    $('#myTable tbody').append(newRow);
                    $('#hdnLastIndex').val(nextRowIndex);
                });

                // Remove item
                $('#myTable').on('click', '.removeItemBtn', function () {
                    $(this).closest('tr').remove();
                    updateRowIndex();
                });

                // Update row index
                function updateRowIndex() {
                    var rows = $('#myTable tbody tr');
                    $('#hdnLastIndex').val(rows.length - 1);

                    rows.each(function (index) {
                        var row = $(this);
                        var inputs = row.find('input');
                        var selects = row.find('select');

                        inputs.each(function () {
                            var input = $(this);
                            var inputName = input.attr('name');
                            inputName = inputName.replace(/\[\d+\]/g, '[' + index + ']');
                            input.attr('name', inputName);

                            var span = $('span[data-valmsg-for="' + inputName + '"]');
                            if (span.length) {
                                span.attr('data-valmsg-for', inputName);
                            }
                        });

                        selects.each(function () {
                            var select = $(this);
                            var selectName = select.attr('name');
                            selectName = selectName.replace(/\[\d+\]/g, '[' + index + ']');
                            select.attr('name', selectName);

                            var span = $('span[data-valmsg-for="' + selectName + '"]');
                            if (span.length) {
                                span.attr('data-valmsg-for', selectName);
                            }
                        });
                    });
                }

                // Form submit
                $('#myForm').on('submit', function (e) {
                    e.preventDefault();

                    var formData = new FormData(this);

                    $.ajax({
                        url: $(this).attr('action'),
                        type: $(this).attr('method'),
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            // Handle success response
                            window.location.href = '/OrderRoute';
                        },
                        error: function (xhr, status, error) {
                            // Handle error response
                            console.log(error);
                        }
                    });
                });
            });
        </script>
}